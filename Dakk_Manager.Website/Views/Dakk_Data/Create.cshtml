@model Dakk_Manager.Website.Models.Dakk_Data

@{
    ViewBag.Title = "Create";
}

<h2>Add Dakk Data</h2>

@using (Html.BeginForm("Create", "Dakk_Data", FormMethod.Post, new { encType = "Multipart/Form-Data" }))
{

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <fieldset>
            <legend>Sender Details</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Givennumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Givennumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Givennumber,"", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DateOnLetter, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control " id="Date" name="DakkDate" required="required" type="date" value="" />
                    @Html.ValidationMessageFor(model => model.DateOnLetter, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Sectionoforigin, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sectionoforigin, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sectionoforigin, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Department, new SelectList(ViewBag.list), "--Select Department--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Receiver Details</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Addressee, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Addressee, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Addressee, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Receivedby, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Receivedby, new { htmlAttributes = new { @class = "form-control", @Value = User.Identity.Name.ToString(),@readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Receivedby, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Dakk Details</legend>

            <div class="form-group">
                @Html.LabelFor(model => model.DateReceived, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input class="form-control " id="Date" name="ReceivedDate" required="required" type="date" value="" />
                    @Html.ValidationMessageFor(model => model.DateReceived, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.list2), "--Select Status--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ForwardTo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ForwardTo, new SelectList(ViewBag.list3), "--Forward To--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ForwardTo, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>

        <fieldset>
            <legend>Upload Dakk</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.Pdfdirectory, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div>
                        <input type="file" id="file" name="file" value="BrowseFile" class="form-control" accept="application/pdf"  required="required"/>
                    </div>
                    @Html.ValidationMessageFor(model => model.Pdfdirectory, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create Dakk" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@
